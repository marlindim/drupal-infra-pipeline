name: Drupal CI/CD

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/drupal-app:${{ github.sha }} ./app
          docker push ${{ secrets.DOCKER_USERNAME }}/drupal-app:${{ github.sha }}

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Unit Tests
        run: |
          cd app
          phpunit --testdox

      - name: Run Integration Tests
        run: |
          cd app
          ./vendor/bin/phpunit tests/Integration

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init & Apply (Staging)
        run: |
          cd infra/staging
          terraform init
          terraform apply -auto-approve

      - name: Smoke Tests
        run: |
          curl -f http://staging.example.com || exit 1

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: deploy-staging
    environment:
      name: production
      url: http://prod.example.com
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init & Apply (Prod)
        run: |
          cd infra/prod
          terraform init
          terraform apply -auto-approve

